{"version":3,"sources":["redux/actions/actionTypes.js","redux/actions/globalActions.js","components/NavItem.js","firebase/firebase.js","components/SideNav.js","redux/actions/userActions.js","assets/logoWhite.svg","assets/logoBlack.svg","components/Header.js","components/Hero.js","components/Post.js","components/Posts.js","pages/HomePage.js","components/FormInput.js","assets/avatar.svg","components/Panel.js","redux/actions/postsActions.js","components/Login.js","pages/AdminPage.js","pages/ContactPage.js","components/PostPanel.js","pages/PostPage.js","components/Footer.js","components/PopUp.js","App.js","redux/reducers/globalReducer.js","redux/reducers/postsReducer.js","redux/reducers/userReducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["HANDLE_MENU","CLOSE_MENU","HANDLE_THEME","HANDLE_POPUP","LOGIN","LOGOUT","USER_STATUS_CHANGED","POSTS_GET","handleMenu","type","actions","handleCloseMenu","handlePopUp","connect","name","link","icon","menu","func","className","onClick","to","href","rel","target","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","auth","db","firestore","state","menuIsOpen","global","themeIsLight","user","handleLogout","signOut","catch","err","console","log","message","sessionStorage","removeItem","handleTheme","useState","switchChecked","setSwitchChecked","ThemeSwitch","withStyles","switchBase","color","Switch","src","logoWhite","logoBlack","alt","FormControlLabel","label","control","checked","onChange","e","map","bar","posts","id","image","title","date","author","source","avatar","intro","tags","history","useHistory","push","tag","Math","floor","random","sort","a","b","dateA","Date","content","value","required","htmlFor","variant","handleAddPost","post","payload","setImage","setSource","setTitle","setIntro","setTags","setContent","handleInput","handleSubmit","preventDefault","toLocaleString","collection","add","onSubmit","rows","Button","size","handleLogin","dispatch","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","useEffect","setTimeout","emailValidation","test","signInWithEmailAndPassword","then","userCredential","uid","setItem","JSON","stringify","code","AdminPage","ContactPage","PostPage","parse","getItem","path","location","pathname","substring","find","Avatar","Footer","popupIsOpen","edit","setEdit","IconButton","targetValue","persistUser","handleGetPosts","get","querySnapshot","forEach","doc","data","split","join","exact","component","HomePage","initialState","globalReducer","action","postsReducer","userReducer","rootReducer","combineReducers","middlewares","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4769b6d.chunk.js","sourcesContent":["export const HANDLE_MENU = \"HANDLE_MENU\";\r\nexport const CLOSE_MENU = \"CLOSE_MENU\";\r\nexport const HANDLE_THEME = \"HANDLE_THEME\";\r\nexport const HANDLE_POPUP = \"HANDLE_POPUP\";\r\n\r\nexport const LOGIN = \"LOGIN\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const USER_STATUS_CHANGED = \"USER_STATUS_CHANGED\";\r\n\r\nexport const POSTS_GET = \"POSTS_GET\";\r\nexport const POST_ADD = \"POST_ADD\";\r\n","import * as actions from \"./actionTypes\";\r\n\r\nexport const handleMenu = () => ({\r\n  type: actions.HANDLE_MENU,\r\n});\r\nexport const handleTheme = () => ({\r\n  type: actions.HANDLE_THEME,\r\n});\r\nexport const handleCloseMenu = () => ({\r\n  type: actions.CLOSE_MENU,\r\n});\r\nexport const handlePopUp = () => ({\r\n  type: actions.HANDLE_POPUP,\r\n});\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { handleMenu } from \"../redux/actions/globalActions\";\r\n\r\nconst NavItem = ({ name, link, icon, handleMenu, menu, func }) => {\r\n  return (\r\n    <li\r\n      className='navitem'\r\n      onClick={() => {\r\n        if (menu) handleMenu();\r\n        if (func) func();\r\n      }}\r\n    >\r\n      {menu ? (\r\n        <Link to={link}>\r\n          <span>{name}</span>\r\n          {icon ? icon : \"\"}\r\n        </Link>\r\n      ) : (\r\n        <a href={link} rel='noreferrer' target='_blank'>\r\n          <span>{name}</span>\r\n          {icon ? icon : \"\"}\r\n        </a>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default connect(null, { handleMenu })(NavItem);\r\n","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyANzmHwEzB8cayASgFW4-LUTUHenBkpp74\",\r\n  authDomain: \"blog-f3373.firebaseapp.com\",\r\n  projectId: \"blog-f3373\",\r\n  storageBucket: \"blog-f3373.appspot.com\",\r\n  messagingSenderId: \"916037085361\",\r\n  appId: \"1:916037085361:web:cbd94500c1d159c00c9a90\",\r\n  measurementId: \"G-KDT1PZFFWX\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\nexport const auth = firebase.auth();\r\nexport const db = firebase.firestore();\r\n\r\nexport default firebase;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { handleMenu } from \"../redux/actions/globalActions\";\r\nimport NavItem from \"./NavItem\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\nimport CallIcon from \"@material-ui/icons/Call\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport { auth } from \"../firebase/firebase\";\r\nimport { handleLogout } from \"../redux/actions/userActions\";\r\n\r\nconst SideNav = ({ menuIsOpen, themeIsLight, handleLogout, user }) => {\r\n  const handleSignOut = () => {\r\n    auth.signOut().catch((err) => console.log(err.message));\r\n    handleLogout();\r\n    sessionStorage.removeItem(\"user\");\r\n  };\r\n  return (\r\n    <nav\r\n      className={`sidenav ${menuIsOpen ? \" sidenav--isOpen\" : \"\"} ${\r\n        themeIsLight ? \"\" : \"sidenav--isDark\"\r\n      }`}\r\n    >\r\n      <ul className='sidenav__list'>\r\n        <NavItem\r\n          name='Portfolio'\r\n          link='https://mstdev89.github.io/portfolio/'\r\n          icon={<LinkIcon />}\r\n        />\r\n        <NavItem name='Contact' link='/contact' icon={<CallIcon />} menu />\r\n        <NavItem name='Admin' link='/admin' icon={<LockIcon />} menu />\r\n        {user ? (\r\n          <NavItem\r\n            name='Logout'\r\n            link='/blog'\r\n            icon={<ExitToAppIcon />}\r\n            menu\r\n            func={handleSignOut}\r\n          />\r\n        ) : null}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  menuIsOpen: state.global.menuIsOpen,\r\n  themeIsLight: state.global.themeIsLight,\r\n  user: state.user.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, { handleMenu, handleLogout })(SideNav);\r\n","import * as actions from \"./actionTypes\";\r\n\r\nexport const persistUser = (user) => async (dispatch) => {\r\n  if (sessionStorage.getItem(\"user\")) {\r\n    await dispatch({\r\n      type: actions.LOGIN,\r\n      payload: user,\r\n    });\r\n  }\r\n};\r\nexport const handleLogin = (user) => async (dispatch) => {\r\n  await dispatch({ type: actions.LOGIN, payload: user });\r\n};\r\nexport const handleLogout = () => ({\r\n  type: actions.LOGOUT,\r\n});\r\n","export default __webpack_public_path__ + \"static/media/logoWhite.eac2b019.svg\";","export default __webpack_public_path__ + \"static/media/logoBlack.2a7653ee.svg\";","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  handleMenu,\r\n  handleTheme,\r\n  handleCloseMenu,\r\n} from \"../redux/actions/globalActions\";\r\nimport SideNav from \"./SideNav\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logoWhite from \"../assets/logoWhite.svg\";\r\nimport logoBlack from \"../assets/logoBlack.svg\";\r\nimport { FormControlLabel, Switch } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\n\r\nconst Header = ({\r\n  handleMenu,\r\n  themeIsLight,\r\n  handleTheme,\r\n  menuIsOpen,\r\n  handleCloseMenu,\r\n}) => {\r\n  const [switchChecked, setSwitchChecked] = useState(false);\r\n  const ThemeSwitch = withStyles({\r\n    switchBase: {\r\n      color: \"#111111\",\r\n      \"&$checked\": {\r\n        color: \"#ffffff\",\r\n      },\r\n    },\r\n  })(Switch);\r\n  const bars = [\"menu__barTop\", \"menu__barMid\", \"menu__barBot\"];\r\n\r\n  return (\r\n    <header\r\n      className={`menu ${menuIsOpen ? \"menu--isOpen\" : \"\"} ${\r\n        themeIsLight ? \"\" : \"menu--isDark\"\r\n      }`}\r\n    >\r\n      <div className='menu__container'>\r\n        <div className='menu__left'>\r\n          <Link to='/blog' onClick={handleCloseMenu}>\r\n            <img src={themeIsLight ? logoWhite : logoBlack} alt='logo mst' />\r\n            <h3>\r\n              ms<span>T</span>\r\n            </h3>\r\n          </Link>\r\n        </div>\r\n        <div className='menu__right'>\r\n          <FormControlLabel\r\n            label={`${themeIsLight ? \"Dark\" : \"Light\"}`}\r\n            control={\r\n              <ThemeSwitch\r\n                checked={switchChecked}\r\n                className='menu__switch'\r\n                onChange={(e) => {\r\n                  handleTheme();\r\n                  setSwitchChecked(e.target.checked);\r\n                }}\r\n              />\r\n            }\r\n          ></FormControlLabel>\r\n          <div className='menu__bars' onClick={handleMenu}>\r\n            {bars.map((bar) => (\r\n              <div\r\n                key={bar}\r\n                className={`menu__bar ${bar} ${\r\n                  themeIsLight ? \"\" : \"menu__bar--isDark\"\r\n                }`}\r\n              ></div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <SideNav />\r\n    </header>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  themeIsLight: state.global.themeIsLight,\r\n  menuIsOpen: state.global.menuIsOpen,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  handleMenu,\r\n  handleTheme,\r\n  handleCloseMenu,\r\n})(Header);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Hero = ({ themeIsLight }) => {\r\n  return (\r\n    <div className={`section hero ${themeIsLight ? \"\" : \"section--isDark\"}`}>\r\n      <div className='hero__container'>\r\n        <h1 className='hero__title'>Blog</h1>\r\n        <p>Blog about everything, and nothing.</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  themeIsLight: state.global.themeIsLight,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(Hero);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { handleCloseMenu } from \"../redux/actions/globalActions\";\r\n\r\nconst Post = ({\r\n  id,\r\n  image,\r\n  title,\r\n  date,\r\n  author,\r\n  source,\r\n  avatar,\r\n  intro,\r\n  tags,\r\n  themeIsLight,\r\n  handleCloseMenu,\r\n}) => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div\r\n      className={`post ${themeIsLight ? \"\" : \"post--isDark\"}`}\r\n      onClick={() => {\r\n        handleCloseMenu();\r\n        history.push(`/post/${id}`);\r\n      }}\r\n    >\r\n      <div className='post__image'>\r\n        <img src={image} alt='screenshot' />\r\n        <p className='post__source'>{source}</p>\r\n      </div>\r\n      <div className='post__title'>\r\n        <h4>{title}</h4>\r\n      </div>\r\n      <div className='post__author'>\r\n        <div className='post__authorLeft'>\r\n          <img src={`${avatar}`} alt='user avatar' />\r\n        </div>\r\n        <div className='post__authorRight'>\r\n          <p>{author}</p>\r\n          <p className='post__date'>{date}</p>\r\n        </div>\r\n      </div>\r\n      <div className='post__intro'>\r\n        <p>{intro}</p>\r\n      </div>\r\n      <div className='post__tags'>\r\n        {tags.map((tag) => (\r\n          <div\r\n            key={tag + Math.floor(Math.random() * 9403284023)}\r\n            className={`post__tag ${themeIsLight ? \"\" : \"post__tag--isDark\"}`}\r\n          >\r\n            <p>{tag}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  themeIsLight: state.global.themeIsLight,\r\n  posts: state.posts.posts,\r\n});\r\n\r\nexport default connect(mapStateToProps, { handleCloseMenu })(Post);\r\n","import React from \"react\";\r\nimport Post from \"./Post\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Posts = ({ posts, themeIsLight }) => {\r\n  return (\r\n    <main className='section posts'>\r\n      {posts\r\n        .sort((a, b) => {\r\n          const dateA = new Date(a.date);\r\n          const dateB = new Date(b.date);\r\n          return dateB - dateA;\r\n        })\r\n        .map(\r\n          ({\r\n            id,\r\n            image,\r\n            title,\r\n            date,\r\n            author,\r\n            avatar,\r\n            intro,\r\n            content,\r\n            tags,\r\n          }) => {\r\n            return (\r\n              <Post\r\n                id={id}\r\n                key={id}\r\n                image={image}\r\n                title={title}\r\n                date={date}\r\n                author={author}\r\n                avatar={avatar}\r\n                intro={intro}\r\n                content={content}\r\n                tags={tags}\r\n              />\r\n            );\r\n          }\r\n        )}\r\n    </main>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  themeIsLight: state.global.themeIsLight,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Posts);\r\n","import React from \"react\";\r\nimport Hero from \"../components/Hero\";\r\nimport Posts from \"../components/Posts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst HomePage = ({ posts }) => {\r\n  return (\r\n    <div className='homePage'>\r\n      <Hero />\r\n      <Posts posts={posts} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  posts: state.posts.posts,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(HomePage);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst FormInput = ({\r\n  label,\r\n  func,\r\n  name,\r\n  value,\r\n  type,\r\n  themeIsLight,\r\n  err,\r\n  required,\r\n}) => {\r\n  return (\r\n    <div className='inputGroup'>\r\n      <label htmlFor={name} className='label'>\r\n        {name}\r\n      </label>\r\n      <input\r\n        required\r\n        onChange={func}\r\n        name={name}\r\n        value={value}\r\n        variant='outlined'\r\n        color='primary'\r\n        label={label}\r\n        type={type}\r\n        className={`input ${themeIsLight ? \"\" : \"input--isDark\"}`}\r\n      />\r\n      {err ? <p className='error'>{err}</p> : \"\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  themeIsLight: state.global.themeIsLight,\r\n});\r\n\r\nexport default connect(mapStateToProps)(FormInput);\r\n","export default __webpack_public_path__ + \"static/media/avatar.c88d2a0a.svg\";","import React, { useState } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport FormInput from \"./FormInput\";\r\nimport { db } from \"../firebase/firebase\";\r\nimport { connect } from \"react-redux\";\r\nimport { handleAddPost } from \"../redux/actions/postsActions\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Panel = ({ handleAddPost, themeIsLight }) => {\r\n  const history = useHistory();\r\n  const [image, setImage] = useState(\"\");\r\n  const [source, setSource] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [intro, setIntro] = useState(\"\");\r\n  const [tags, setTags] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const handleInput = (e) => {\r\n    const { value, name } = e.target;\r\n    if (name === \"img\") setImage(value);\r\n    if (name === \"source\") setSource(value);\r\n    if (name === \"title\") setTitle(value);\r\n    if (name === \"intro\") setIntro(value);\r\n    if (name === \"tags\") setTags(value);\r\n    if (name === \"content\") setContent(value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const post = {\r\n      title,\r\n      intro,\r\n      source,\r\n      tags,\r\n      image,\r\n      content,\r\n      date: new Date().toLocaleString(),\r\n      author: \"msT\",\r\n    };\r\n    await db.collection(\"posts\").add(post);\r\n    handleAddPost(post);\r\n    setImage(\"\");\r\n    setSource(\"\");\r\n    setTitle(\"\");\r\n    setIntro(\"\");\r\n    setTags(\"\");\r\n    setContent(\"\");\r\n    history.push(\"/blog\");\r\n  };\r\n\r\n  return (\r\n    <form className='adminPage__form' onSubmit={(e) => handleSubmit(e)}>\r\n      <h3>Panel</h3>\r\n      <FormInput\r\n        required\r\n        label='Image'\r\n        value={image}\r\n        name='img'\r\n        type='text'\r\n        func={(e) => handleInput(e)}\r\n      />\r\n      <FormInput\r\n        required\r\n        label='Image Source'\r\n        value={source}\r\n        name='source'\r\n        type='text'\r\n        func={(e) => handleInput(e)}\r\n      />\r\n      <FormInput\r\n        required\r\n        label='Title'\r\n        value={title}\r\n        name='title'\r\n        type='text'\r\n        func={(e) => handleInput(e)}\r\n      />\r\n      <FormInput\r\n        required\r\n        label='Intro'\r\n        value={intro}\r\n        name='intro'\r\n        type='text'\r\n        func={(e) => handleInput(e)}\r\n      />\r\n      <FormInput\r\n        required\r\n        label='Tags'\r\n        value={tags}\r\n        name='tags'\r\n        type='text'\r\n        func={(e) => handleInput(e)}\r\n      />\r\n      <div className='inputGroup'>\r\n        <label htmlFor='message' className='label'>\r\n          Message\r\n        </label>\r\n        <textarea\r\n          required\r\n          rows={8}\r\n          value={content}\r\n          name='content'\r\n          onChange={(e) => handleInput(e)}\r\n          className={`input ${themeIsLight ? \"\" : \"input--isDark\"}`}\r\n        ></textarea>\r\n      </div>\r\n      <Button\r\n        variant='contained'\r\n        color='primary'\r\n        size='large'\r\n        type='submit'\r\n        className='btn'\r\n      >\r\n        Add Post\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  themeIsLight: state.global.themeIsLight,\r\n});\r\n\r\nexport default connect(mapStateToProps, { handleAddPost })(Panel);\r\n","import * as actions from \"./actionTypes\";\r\nimport { db } from \"../../firebase/firebase\";\r\nimport avatar from \"../../assets/avatar.svg\";\r\n\r\nexport const handleGetPosts = () => async (dispatch) => {\r\n  await db\r\n    .collection(\"posts\")\r\n    .get()\r\n    .then((querySnapshot) => {\r\n      const posts = [];\r\n      querySnapshot.forEach((doc) => {\r\n        const {\r\n          content,\r\n          title,\r\n          tags,\r\n          intro,\r\n          date,\r\n          author,\r\n          image,\r\n          source,\r\n        } = doc.data();\r\n        const id = doc.id;\r\n        const handleTags = () => {\r\n          const t = tags.split(\",\").join(\"\");\r\n          const arr = t.split(\" \");\r\n          return arr;\r\n        };\r\n        const post = {\r\n          id,\r\n          content,\r\n          title,\r\n          tags: handleTags(),\r\n          source,\r\n          intro,\r\n          image,\r\n          avatar,\r\n          date,\r\n          author,\r\n        };\r\n        posts.push(post);\r\n      });\r\n      dispatch({\r\n        type: actions.POSTS_GET,\r\n        payload: posts,\r\n      });\r\n      sessionStorage.setItem(\"posts\", JSON.stringify(posts));\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.message);\r\n    });\r\n};\r\nexport const handleAddPost = (post) => ({\r\n  type: actions.POST_ADD,\r\n  payload: post,\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport FormInput from \"./FormInput\";\r\nimport { auth } from \"../firebase/firebase\";\r\nimport { connect } from \"react-redux\";\r\nimport { handleLogin } from \"../redux/actions/userActions\";\r\n\r\nconst Login = ({ handleLogin }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n  const handleInput = (e) => {\r\n    const { value, name } = e.target;\r\n    if (name === \"email\") setEmail(value);\r\n    if (name === \"password\") setPassword(value);\r\n  };\r\n  useEffect(() => {\r\n    setTimeout(() => setEmailError(\"\"), 3000);\r\n  }, [emailError]);\r\n  useEffect(() => {\r\n    setTimeout(() => setPasswordError(\"\"), 3000);\r\n  }, [passwordError]);\r\n\r\n  const emailValidation = (email) => {\r\n    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\r\n  };\r\n  return (\r\n    <form\r\n      className='adminPage__form'\r\n      onSubmit={async (e) => {\r\n        e.preventDefault();\r\n        console.log(emailValidation(email));\r\n        if (email && password) {\r\n          await auth\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then((userCredential) => {\r\n              const { uid } = userCredential.user;\r\n              setEmail(\"\");\r\n              setPassword(\"\");\r\n              sessionStorage.setItem(\"user\", JSON.stringify(uid));\r\n              handleLogin(uid);\r\n            })\r\n            .catch((err) => {\r\n              if (\r\n                err.code === \"auth/invalid-email\" ||\r\n                err.code === \"auth/user-not-found\"\r\n              ) {\r\n                setEmailError(err.message);\r\n              } else if (err.code === \"auth/wrong-password\") {\r\n                setPasswordError(err.message);\r\n              }\r\n            });\r\n        }\r\n      }}\r\n    >\r\n      <h3>Login</h3>\r\n      <FormInput\r\n        label='Email'\r\n        value={email}\r\n        name='email'\r\n        type='text'\r\n        err={emailError}\r\n        func={(e) => handleInput(e)}\r\n      />\r\n      <FormInput\r\n        label='Password'\r\n        value={password}\r\n        name='password'\r\n        type='password'\r\n        err={passwordError}\r\n        func={(e) => handleInput(e)}\r\n      />\r\n\r\n      <Button variant='contained' color='primary' size='large' type='submit'>\r\n        To The Panel\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default connect(null, { handleLogin })(Login);\r\n","import React from \"react\";\r\nimport Panel from \"../components/Panel\";\r\nimport Login from \"../components/Login\";\r\n\r\nconst AdminPage = ({ themeIsLight, user }) => {\r\n  return (\r\n    <div className={`${themeIsLight ? \"page\" : \"page page--isDark\"} adminPage`}>\r\n      {user ? <Panel /> : <Login />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPage;\r\n","import React from \"react\";\r\nimport NavItem from \"../components/NavItem\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\n\r\nconst ContactPage = () => {\r\n  return (\r\n    <div className='page contactPage'>\r\n      <div className='contactPage__socials'>\r\n        <ul className='contactPage__list'>\r\n          <NavItem\r\n            name='Facebook'\r\n            link='https://www.facebook.com/robert.lucius.355/'\r\n            icon={<FacebookIcon />}\r\n          />\r\n          <NavItem\r\n            name='Github'\r\n            link='https://github.com/msTdeV89'\r\n            icon={<GitHubIcon />}\r\n          />\r\n          <NavItem\r\n            name='Linkedin'\r\n            link='https://www.linkedin.com/in/robert-kaczmarek-a230101a3/'\r\n            icon={<LinkedInIcon />}\r\n          />\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactPage;\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { handlePopUp } from \"../redux/actions/globalActions\";\r\n\r\nconst PostPanel = ({ handlePopUp }) => {\r\n  return (\r\n    <div className='postPage__panel'>\r\n      <Button\r\n        variant='contained'\r\n        color='primary'\r\n        size='medium'\r\n        type='submit'\r\n        className='btn'\r\n        onClick={handlePopUp}\r\n      >\r\n        Edit Content\r\n      </Button>\r\n      <Button\r\n        variant='contained'\r\n        color='primary'\r\n        size='medium'\r\n        type='submit'\r\n        className='btn'\r\n      >\r\n        Delete Post\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { handlePopUp })(PostPanel);\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport PostPanel from \"../components/PostPanel\";\r\n\r\nconst PostPage = ({ themeIsLight }) => {\r\n  const posts = JSON.parse(sessionStorage.getItem(\"posts\")) || [];\r\n  const history = useHistory();\r\n  const path = history.location.pathname.substring(6);\r\n\r\n  const {\r\n    author,\r\n    avatar,\r\n    source,\r\n    intro,\r\n    date,\r\n    image,\r\n    tags,\r\n    title,\r\n    content,\r\n  } = posts.find((post) => post.id === path);\r\n  return (\r\n    <div className='page postPage'>\r\n      <PostPanel />\r\n      <div className='postPage__image'>\r\n        <img src={`${image}`} alt={image} />\r\n        <p>\r\n          Image source:\r\n          <a\r\n            href={source}\r\n            target='_blank'\r\n            rel='noreferrer'\r\n            className='postPage__source'\r\n          >\r\n            {source}\r\n          </a>\r\n          .\r\n        </p>\r\n      </div>\r\n      <div className='postPage__title'>\r\n        <h3>{title}</h3>\r\n        <p>{date}</p>\r\n      </div>\r\n      <div className='postPage__author'>\r\n        <Avatar alt='user avatar' src={avatar} />\r\n        <p>{author}</p>\r\n      </div>\r\n      <div className='postPage__intro'>\r\n        <p>{intro}</p>\r\n      </div>\r\n      <div className='postPage__content'>\r\n        <p>{content}</p>\r\n      </div>\r\n      <div className='postPage__tags'>\r\n        {tags.map((tag) => (\r\n          <p\r\n            key={tag}\r\n            className={`postPage__tag ${\r\n              themeIsLight ? \"\" : \"postPage__tag--isDark\"\r\n            }`}\r\n          >\r\n            {tag}\r\n          </p>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostPage;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <p>\r\n        ms<span>T</span> 2020\r\n      </p>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState } from \"react\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { IconButton, Button } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { handlePopUp } from \"../redux/actions/globalActions\";\r\n\r\nconst PopUp = ({ themeIsLight, handlePopUp, popupIsOpen }) => {\r\n  const [edit, setEdit] = useState(\"\");\r\n\r\n  const handleInput = (e) => {\r\n    setEdit(e.targetValue);\r\n  };\r\n  return (\r\n    <form className={`popUp ${popupIsOpen ? \"popUp--isActive\" : \"\"}`}>\r\n      <div className='popUp__wrap'>\r\n        <IconButton className='popUp__close' onClick={handlePopUp}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n        <div className='inputGroup'>\r\n          <label htmlFor={edit} className='label'>\r\n            Edit\r\n          </label>\r\n          <textarea\r\n            required\r\n            label='Edit'\r\n            value={edit}\r\n            rows={8}\r\n            name='edit'\r\n            onChange={(e) => handleInput(e)}\r\n            className={`input ${themeIsLight ? \"\" : \"input--isDark\"}`}\r\n          />\r\n        </div>\r\n\r\n        <Button\r\n          variant='contained'\r\n          color='primary'\r\n          size='medium'\r\n          type='submit'\r\n          className='btn popUp__close'\r\n        >\r\n          Close{\" \"}\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  themeIsLight: state.global.themeIsLight,\r\n  popupIsOpen: state.global.popupIsOpen,\r\n});\r\n\r\nexport default connect(mapStateToProps, { handlePopUp })(PopUp);\r\n","import React, { useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport HomePage from \"./pages/HomePage\";\nimport AdminPage from \"./pages/AdminPage\";\nimport ContactPage from \"./pages/ContactPage\";\nimport PostPage from \"./pages/PostPage\";\nimport Footer from \"./components/Footer\";\nimport { connect } from \"react-redux\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { persistUser } from \"./redux/actions/userActions\";\nimport { handleGetPosts } from \"./redux/actions/postsActions\";\nimport PopUp from \"./components/PopUp\";\n\nfunction App({ themeIsLight, menuIsOpen, user, persistUser, handleGetPosts }) {\n  useEffect(() => {\n    persistUser(JSON.parse(sessionStorage.getItem(\"user\")));\n    handleGetPosts();\n  }, [user, persistUser, handleGetPosts]);\n\n  return (\n    <div className={`app ${themeIsLight ? \"\" : \"app--isDark\"}`}>\n      <Header />\n      <PopUp />\n      <div\n        className={`app__container ${\n          menuIsOpen ? \"app__container--isOpen\" : \"\"\n        }`}\n      >\n        <Switch>\n          <Route exact path='/blog' component={HomePage} />\n          <Route\n            path='/admin'\n            component={() => (\n              <AdminPage themeIsLight={themeIsLight} user={user} />\n            )}\n          />\n          <Route\n            path='/contact'\n            component={() => <ContactPage themeIsLight={themeIsLight} />}\n          />\n          <Route\n            path='/post/:postId'\n            component={() => (\n              <PostPage themeIsLight={themeIsLight} user={user} />\n            )}\n          />\n        </Switch>\n        <Footer />\n      </div>\n    </div>\n  );\n}\nconst mapStateToProps = (state) => ({\n  themeIsLight: state.global.themeIsLight,\n  menuIsOpen: state.global.menuIsOpen,\n  posts: state.posts.posts,\n  user: state.user.user,\n});\n\nexport default connect(mapStateToProps, { persistUser, handleGetPosts })(App);\n","import * as actions from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  menuIsOpen: false,\r\n  themeIsLight: true,\r\n  popupIsOpen: false,\r\n};\r\n\r\nconst globalReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actions.HANDLE_MENU:\r\n      return { ...state, menuIsOpen: !state.menuIsOpen };\r\n    case actions.CLOSE_MENU:\r\n      return { ...state, menuIsOpen: false };\r\n    case actions.HANDLE_THEME:\r\n      return { ...state, themeIsLight: !state.themeIsLight };\r\n    case actions.HANDLE_POPUP:\r\n      return { ...state, popupIsOpen: !state.popupIsOpen };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default globalReducer;\r\n","import * as actions from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  posts: [],\r\n};\r\n\r\nconst postsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actions.POSTS_GET:\r\n      return { ...state, posts: [...action.payload] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default postsReducer;\r\n","import * as actions from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  user: null,\r\n};\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actions.USER_STATUS_CHANGED:\r\n      return { ...state, user: action.payload };\r\n    case actions.LOGIN:\r\n      return { ...state, user: action.payload };\r\n    case actions.LOGOUT:\r\n      return { ...state, user: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport globalReducer from \"./globalReducer\";\r\nimport postsReducer from \"./postsReducer\";\r\nimport userReducer from \"./userReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  global: globalReducer,\r\n  posts: postsReducer,\r\n  user: userReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers/index\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst middlewares = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middlewares))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}